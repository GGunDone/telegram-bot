import requests
import json
import time
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv("config.env")

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("BOT_TOKEN")
BONUS_URL = "https://vodka5.xyz?id=14245"
IMAGE_PATH = "bot.jpg.jpg"

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USERS_FILE = "users_data.json"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def load_users_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(USERS_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_users_data(users_data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª"""
    with open(USERS_FILE, 'w', encoding='utf-8') as f:
        json.dump(users_data, f, ensure_ascii=False, indent=2)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
users_data = load_users_data()

def send_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    if reply_markup:
        data["reply_markup"] = json.dumps(reply_markup)
    
    response = requests.post(url, data=data)
    return response.json()

def send_photo(chat_id, photo_path, caption, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TOKEN}/sendPhoto"
    data = {
        "chat_id": chat_id,
        "caption": caption,
        "parse_mode": "HTML"
    }
    if reply_markup:
        data["reply_markup"] = json.dumps(reply_markup)
    
    try:
        with open(photo_path, 'rb') as photo:
            files = {"photo": photo}
            response = requests.post(url, data=data, files=files)
            return response.json()
    except FileNotFoundError:
        return send_message(chat_id, caption, reply_markup)

def get_updates(offset=None):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram"""
    url = f"https://api.telegram.org/bot{TOKEN}/getUpdates"
    params = {"timeout": 30}
    if offset:
        params["offset"] = offset
    
    response = requests.get(url, params=params)
    return response.json()

def handle_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    chat_id = message["chat"]["id"]
    user_id = message["from"]["id"]
    text = message.get("text", "")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_time = datetime.now().isoformat()
    users_data[str(user_id)] = {
        "chat_id": chat_id,
        "last_interaction": current_time,
        "username": message["from"].get("username", ""),
        "first_name": message["from"].get("first_name", "")
    }
    save_users_data(users_data)
    
    if text == "/start":
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
        keyboard = {
            "inline_keyboard": [
                [{"text": "–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å", "url": BONUS_URL}]
            ]
        }
        
        # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        caption = (
            "WELCOME-–ë–û–ù–£–° –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–ø! üéÅ\n\n"
            "1. –ó–∞–ø—É—Å–∫–∞–µ—à—å –±–æ—Ç–∞\n"
            "2. –¢–∞–ø–∞–µ—à—å –ø–æ –∫–Ω–æ–ø–∫–µ —Å–Ω–∏–∑—É\n"
            "3. –õ—É—Ç–∞–µ—à—å +100% –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –∏ 100 FS –≤ The Dog House\n\n"
            "–ë–æ—Ä–æ–≤—ã, –≤—ã —á—ë, —Ä–µ–∞–ª—å–Ω–æ –µ—â—ë –Ω–µ –∑–∞–±—Ä–∞–ª–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –±–æ–Ω—É—Å? ü§î\n"
            "–£ –≤–∞—Å –µ—â—ë 3 –≤–∞–ª—è—é—Ç—Å—è –±–µ–∑ –¥–µ–ª–∞ ‚Äî –≤ —Å—É–º–º–µ 300 FS\n\n"
            "–ñ–º–∏ ¬´–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å¬ª –∏ –ø–æ—à–ª–∞ –≤–æ–∑–Ω—è üöÄüî•"
        )
        
        send_photo(chat_id, IMAGE_PATH, caption, keyboard)
        
    elif text == "/push_news":
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
        if str(user_id) == "YOUR_ADMIN_ID":  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
            send_message(chat_id, "üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
            sent, failed = send_news_update()
            send_message(chat_id, f"‚úÖ Push-—Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {sent}\n–û—à–∏–±–æ–∫: {failed}")
        else:
            send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            
    elif text == "/stats":
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
        total_users = len(users_data)
        active_today = 0
        current_date = datetime.now().date()
        
        for user_data in users_data.values():
            last_interaction = datetime.fromisoformat(user_data["last_interaction"]).date()
            if last_interaction == current_date:
                active_today += 1
        
        stats_text = (
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
            f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
            f"üìÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: {active_today}\n"
            f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
        )
        send_message(chat_id, stats_text)
        
    else:
        response_text = "ü§ñ –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞!"
        send_message(chat_id, response_text)

def check_and_send_reminders():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —á–µ—Ä–µ–∑ 7 –¥–Ω–µ–π"""
    current_time = datetime.now()
    reminders_sent = 0
    
    for user_id, user_data in users_data.items():
        try:
            last_interaction = datetime.fromisoformat(user_data["last_interaction"])
            days_passed = (current_time - last_interaction).days
            
            # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ 7 –¥–Ω–µ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ª—É—á–∞–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
            if days_passed >= 7 and not user_data.get("reminder_sent", False):
                chat_id = user_data["chat_id"]
                
                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                keyboard = {
                    "inline_keyboard": [
                        [{"text": "–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å", "url": BONUS_URL}]
                    ]
                }
                
                # –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                reminder_text = (
                    "üéØ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –±–æ–Ω—É—Å–µ!\n\n"
                    "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ—à–ª–∞ –Ω–µ–¥–µ–ª—è, –∞ —Ç—ã —Ç–∞–∫ –∏ –Ω–µ –∑–∞–±—Ä–∞–ª —Å–≤–æ–π –±–æ–Ω—É—Å! üòè\n\n"
                    "üî• +100% –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é\n"
                    "üé∞ 100 FS –≤ The Dog House\n"
                    "üí∞ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã\n\n"
                    "–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å! –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ! üöÄ"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
                send_message(chat_id, reminder_text, keyboard)
                
                # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                user_data["reminder_sent"] = True
                user_data["reminder_sent_date"] = current_time.isoformat()
                reminders_sent += 1
                
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if reminders_sent > 0:
        save_users_data(users_data)
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {reminders_sent} –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")

def send_push_notification(title, message, image_path=None, button_text="–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ", button_url=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    sent_count = 0
    failed_count = 0
    
    print(f"–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {title}")
    
    for user_id, user_data in users_data.items():
        try:
            chat_id = user_data["chat_id"]
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞
            keyboard = None
            if button_text and button_url:
                keyboard = {
                    "inline_keyboard": [
                        [{"text": button_text, "url": button_url}]
                    ]
                }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–ª–∏ –±–µ–∑
            if image_path and os.path.exists(image_path):
                send_photo(chat_id, image_path, message, keyboard)
            else:
                send_message(chat_id, message, keyboard)
            
            sent_count += 1
            print(f"Push –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
            time.sleep(0.1)
            
        except Exception as e:
            failed_count += 1
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ push –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    
    print(f"Push-—Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count}, –æ—à–∏–±–æ–∫ {failed_count}")
    return sent_count, failed_count

def send_news_update():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    title = "üì¢ –ù–û–í–û–°–¢–ò –ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø!"
    
    message = (
        "üöÄ –£ –Ω–∞—Å –µ—Å—Ç—å –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!\n\n"
        "‚ú® –ù–æ–≤—ã–µ –±–æ–Ω—É—Å—ã –∏ –∞–∫—Ü–∏–∏\n"
        "üéÅ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã\n"
        "üî• –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã\n"
        "üíé –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n\n"
        "–ù–µ —É–ø—É—Å—Ç–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º! üí™\n"
        "–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –∑–∞–±–∏—Ä–∞–π —Å–≤–æ–π –±–æ–Ω—É—Å! üéØ"
    )
    
    button_text = "–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å"
    button_url = BONUS_URL
    
    return send_push_notification(title, message, IMAGE_PATH, button_text, button_url)

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞"""
    print("–ë–æ–Ω—É—Å-–±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    if not TOKEN:
        print("–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª config.env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º: BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        return
    
    offset = None
    last_reminder_check = datetime.now()
    
    while True:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
            current_time = datetime.now()
            if (current_time - last_reminder_check).total_seconds() >= 6 * 3600:  # 6 —á–∞—Å–æ–≤
                check_and_send_reminders()
                last_reminder_check = current_time
            
            updates = get_updates(offset)
            
            if updates["ok"]:
                for update in updates["result"]:
                    offset = update["update_id"] + 1
                    
                    if "message" in update:
                        handle_message(update["message"])
            
            time.sleep(1)
            
        except KeyboardInterrupt:
            print("\n–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            time.sleep(5)

if __name__ == "__main__":
    main()
