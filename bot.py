from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os
import logging
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv("config.env")

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("BOT_TOKEN")
BONUS_URL = "https://send1.vodka?id=8481"
IMAGE_PATH = "bot.jpg.jpg"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å", url=BONUS_URL)]
    ])
    
    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    caption = (
        "WELCOME-–ë–û–ù–£–° –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–ø! üéÅ\n\n"
        "1. –ó–∞–ø—É—Å–∫–∞–µ—à—å –±–æ—Ç–∞\n"
        "2. –¢–∞–ø–∞–µ—à—å –ø–æ –∫–Ω–æ–ø–∫–µ —Å–Ω–∏–∑—É\n"
        "3. –õ—É—Ç–∞–µ—à—å +100% –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –∏ 100 FS –≤ The Dog House\n\n"
        "–ë–æ—Ä–æ–≤—ã, –≤—ã —á—ë, —Ä–µ–∞–ª—å–Ω–æ –µ—â—ë –Ω–µ –∑–∞–±—Ä–∞–ª–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –±–æ–Ω—É—Å? ü§î\n"
        "–£ –≤–∞—Å –µ—â—ë 3 –≤–∞–ª—è—é—Ç—Å—è –±–µ–∑ –¥–µ–ª–∞ ‚Äî –≤ —Å—É–º–º–µ 300 FS\n\n"
        "–ñ–º–∏ ¬´–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å¬ª –∏ –ø–æ—à–ª–∞ –≤–æ–∑–Ω—è üöÄüî•"
    )

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–Ω–æ–ø–∫–æ–π
        with open(IMAGE_PATH, 'rb') as photo:
            await message.answer_photo(
                photo=photo,
                caption=caption,
                reply_markup=keyboard
            )
    except FileNotFoundError:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await message.answer(
            caption,
            reply_markup=keyboard
        )

@dp.message()
async def handle_other_messages(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    response_text = (
        "ü§ñ –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞!"
    )
    await message.answer(response_text)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("ü§ñ –ë–æ–Ω—É—Å-–±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print("üìä –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    if not TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º: BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        return
    
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
